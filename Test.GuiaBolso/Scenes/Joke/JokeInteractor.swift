//
//  JokeInteractor.swift
//  Test.GuiaBolso
//
//  Created by Leandro Romano on 28/06/19.
//  Copyright (c) 2019 Leandro Romano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol JokeBusinessLogic {
    func setupViewTitle()
    func setupLoadingState()
    func requestRandomJoke()
    func requestOpenJokePage()
}

protocol JokeDataStore {
    var category: String? { get set }
}

class JokeInteractor: JokeBusinessLogic, JokeDataStore {

    var presenter: JokePresentationLogic?
    var worker: JokeWorker?
    var category: String?
    var jokeUrl: String?
    
    init(worker: JokeWorker = JokeWorker()) {
        self.worker = worker
    }
    
    func setupViewTitle() {
        if let category = category {
            presenter?.presentView(title: category)
        }
    }
    
    func setupLoadingState() {
        presenter?.presentLoadingState()
    }
    
    func requestRandomJoke() {
        if let jokeCategory = category {
            worker?.getRandomJokeFor(category: jokeCategory).done(handleResponseSuccess).catch(handleResponseError)
        }
    }
    
    private func handleResponseSuccess(_ response: Joke.Response) {
        jokeUrl = response.jokeUrl
        presenter?.presentFilledState()
        presenter?.presentJoke(response: response)
    }
    
    private func handleResponseError(_ error: Error) {
        presenter?.presentError(error)
    }
    
    func requestOpenJokePage() {
        if let jokeUrl = jokeUrl {
            presenter?.presentJokePageBy(url: jokeUrl)
        }
    }

}
