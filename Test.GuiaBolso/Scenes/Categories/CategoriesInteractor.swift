//
//  CategoriesInteractor.swift
//  Test.GuiaBolso
//
//  Created by Leandro Romano on 27/06/19.
//  Copyright (c) 2019 Leandro Romano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CategoriesBusinessLogic {
    
    var numberOfRows: Int { get }
    
    func setupLoadingState()
    func requestCategories()
    func cellForRow(at index: Int) -> String
    func didSelect(at index: Int)
}

protocol CategoriesDataStore {
    //var name: String { get set }
}

class CategoriesInteractor: CategoriesBusinessLogic, CategoriesDataStore {

    var presenter: CategoriesPresentationLogic?
    var worker: CategoriesWorker?
    var categories = [String]()
    var numberOfRows: Int {
        return categories.count
    }
    
    init(worker: CategoriesWorker = CategoriesWorker()) {
        self.worker = worker
    }
    
    func setupLoadingState() {
        presenter?.presentLoadingState()
    }
    
    func requestCategories() {
        worker?.getCategories().done(handleResponseSuccess).catch(handleResponseError)
    }
    
    private func handleResponseSuccess(_ response: [String]) {
        categories = response
        presenter?.presentDynamicData()
    }
    
    private func handleResponseError(_ error: Error) {
        presenter?.presentError(error)
    }
    
    func cellForRow(at index: Int) -> String {
        return categories[index]
    }
    
    func didSelect(at index: Int) {
        
    }

}
